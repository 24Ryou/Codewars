{
  "id": "52774a314c2333f0a7000688",
  "name": "Valid Parentheses",
  "slug": "valid-parentheses",
  "category": "algorithms",
  "publishedAt": "2013-11-04T07:31:14.702Z",
  "approvedAt": null,
  "languages": [
    "javascript",
    "coffeescript",
    "haskell",
    "python",
    "ruby",
    "dart",
    "go",
    "elixir",
    "csharp",
    "objc",
    "nasm",
    "c",
    "java",
    "cobol",
    "julia",
    "rust",
    "d"
  ],
  "url": "https://www.codewars.com/kata/52774a314c2333f0a7000688",
  "rank": {
    "id": -5,
    "name": "5 kyu",
    "color": "yellow"
  },
  "createdAt": "2013-11-04T07:18:09.241Z",
  "createdBy": {
    "username": "xDranik",
    "url": "https://www.codewars.com/users/xDranik"
  },
  "approvedBy": null,
  "description": "Write a function that takes a string of parentheses, and determines if the order of the parentheses is valid. The function should return `true` if the string is valid, and `false` if it's invalid.\n\n## Examples\n\n```\n\"()\"              =>  true\n\")(()))\"          =>  false\n\"(\"               =>  false\n\"(())((()())())\"  =>  true\n```\n\n## Constraints\n\n`0 <= input.length <= 100`\n\n~~~if-not:javascript,go,cobol\nAlong with opening (`(`) and closing (`)`) parenthesis, input may contain any valid ASCII characters.  Furthermore, the input string may be empty and/or not contain any parentheses at all.  Do **not** treat other forms of brackets as parentheses (e.g. `[]`, `{}`, `<>`).\n~~~\n",
  "apiVersion": 2,
  "tags": [
    "Algorithms"
  ],
  "totalAttempts": 507598,
  "totalCompleted": 83896,
  "totalStars": 2081
}