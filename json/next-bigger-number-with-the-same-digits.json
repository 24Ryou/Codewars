{
  "id": "55983863da40caa2c900004e",
  "name": "Next bigger number with the same digits",
  "slug": "next-bigger-number-with-the-same-digits",
  "category": "refactoring",
  "publishedAt": "2015-07-04T21:21:38.051Z",
  "approvedAt": "2015-09-28T15:32:02.898Z",
  "languages": [
    "javascript",
    "python",
    "ruby",
    "csharp",
    "coffeescript",
    "java",
    "kotlin",
    "rust",
    "haskell",
    "c",
    "swift",
    "go",
    "typescript",
    "julia",
    "crystal",
    "groovy",
    "php",
    "vb",
    "cobol",
    "cpp"
  ],
  "url": "https://www.codewars.com/kata/55983863da40caa2c900004e",
  "rank": {
    "id": -4,
    "name": "4 kyu",
    "color": "blue"
  },
  "createdAt": "2015-07-04T19:47:48.120Z",
  "createdBy": {
    "username": "GiacomoSorbi",
    "url": "https://www.codewars.com/users/GiacomoSorbi"
  },
  "approvedBy": "jhoffner",
  "description": "Create a function that takes a positive integer and returns the next bigger number that can be formed by rearranging its digits. For example:\n\n```\n12 ==> 21\n513 ==> 531\n2017 ==> 2071\n```\n```swift\nnextBigger(num: 12)   // returns 21\nnextBigger(num: 513)  // returns 531\nnextBigger(num: 2017) // returns 2071\n```\n\nIf the digits can't be rearranged to form a bigger number, return `-1` (or `nil` in Swift):\n\n```\n9 ==> -1\n111 ==> -1\n531 ==> -1\n```\n```swift\nnextBigger(num: 9)   // returns nil\nnextBigger(num: 111) // returns nil\nnextBigger(num: 531) // returns nil\n```",
  "apiVersion": 2,
  "tags": [
    "Strings",
    "Refactoring"
  ],
  "totalAttempts": 414177,
  "totalCompleted": 26141,
  "totalStars": 3640
}