{
  "id": "545a4c5a61aa4c6916000755",
  "name": "Find the middle element",
  "slug": "find-the-middle-element",
  "category": "reference",
  "publishedAt": "2014-11-05T16:14:11.990Z",
  "approvedAt": "2017-06-12T00:10:15.198Z",
  "languages": [
    "javascript",
    "python",
    "coffeescript",
    "ruby",
    "haskell",
    "csharp",
    "rust",
    "c",
    "go",
    "cobol",
    "factor"
  ],
  "url": "https://www.codewars.com/kata/545a4c5a61aa4c6916000755",
  "rank": {
    "id": -7,
    "name": "7 kyu",
    "color": "white"
  },
  "createdAt": "2014-11-05T16:12:11.365Z",
  "createdBy": {
    "username": "myTerminal",
    "url": "https://www.codewars.com/users/myTerminal"
  },
  "approvedBy": "Voile",
  "description": "As a part of this Kata, you need to create a function that when provided with a triplet, returns the index of the numerical element that lies between the other two elements.\n\nThe input to the function will be an array of three distinct numbers (Haskell: a tuple).\n\nFor example:\n\n    gimme([2, 3, 1]) => 0\n\n*2* is the number that fits between *1* and *3* and the index of *2* in the input array is *0*.\n\nAnother example (just to make sure it is clear):\n\n    gimme([5, 10, 14]) => 1\n    \n*10* is the number that fits between *5* and *14* and the index of *10* in the input array is *1*.",
  "apiVersion": 2,
  "tags": [
    "Arrays",
    "Fundamentals"
  ],
  "totalAttempts": 68489,
  "totalCompleted": 22406,
  "totalStars": 296
}