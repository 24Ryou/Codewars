{
  "id": "5656b6906de340bd1b0000ac",
  "name": "Two to One",
  "slug": "two-to-one",
  "category": "reference",
  "publishedAt": "2015-11-26T07:37:03.397Z",
  "approvedAt": "2015-11-26T22:34:53.027Z",
  "languages": [
    "java",
    "csharp",
    "ruby",
    "python",
    "javascript",
    "coffeescript",
    "haskell",
    "clojure",
    "cpp",
    "php",
    "crystal",
    "fsharp",
    "c",
    "elixir",
    "typescript",
    "shell",
    "ocaml",
    "kotlin",
    "julia",
    "go",
    "r",
    "rust",
    "scala",
    "powershell",
    "nim",
    "reason",
    "racket",
    "dart",
    "pascal",
    "perl",
    "cobol",
    "d",
    "erlang"
  ],
  "url": "https://www.codewars.com/kata/5656b6906de340bd1b0000ac",
  "rank": {
    "id": -7,
    "name": "7 kyu",
    "color": "white"
  },
  "createdAt": "2015-11-26T07:36:48.966Z",
  "createdBy": {
    "username": "g964",
    "url": "https://www.codewars.com/users/g964"
  },
  "approvedBy": "joh_pot",
  "description": "Take 2 strings `s1` and `s2` including only letters from `a` to `z`.\nReturn a new **sorted** string, the longest possible, containing distinct letters - each taken only once - coming from s1 or s2.\n\n#### Examples:\n```\na = \"xyaabbbccccdefww\"\nb = \"xxxxyyyyabklmopq\"\nlongest(a, b) -> \"abcdefklmopqwxy\"\n\na = \"abcdefghijklmnopqrstuvwxyz\"\nlongest(a, a) -> \"abcdefghijklmnopqrstuvwxyz\"\n```\n",
  "apiVersion": 2,
  "tags": [
    "Fundamentals"
  ],
  "totalAttempts": 329265,
  "totalCompleted": 111809,
  "totalStars": 1428
}