{
  "id": "52b7ed099cdc285c300001cd",
  "name": "Sum of Intervals",
  "slug": "sum-of-intervals",
  "category": "algorithms",
  "publishedAt": "2013-12-23T11:12:52.610Z",
  "approvedAt": "2013-12-26T01:51:39.373Z",
  "languages": [
    "javascript",
    "coffeescript",
    "php",
    "python",
    "ruby",
    "java",
    "cpp",
    "clojure",
    "csharp",
    "elixir",
    "dart",
    "crystal",
    "julia",
    "haskell",
    "typescript",
    "racket",
    "c",
    "nasm",
    "cobol",
    "rust",
    "go"
  ],
  "url": "https://www.codewars.com/kata/52b7ed099cdc285c300001cd",
  "rank": {
    "id": -4,
    "name": "4 kyu",
    "color": "blue"
  },
  "createdAt": "2013-12-23T07:58:01.483Z",
  "createdBy": {
    "username": "xDranik",
    "url": "https://www.codewars.com/users/xDranik"
  },
  "approvedBy": "jhoffner",
  "description": "Write a function called `sumIntervals`/`sum_intervals()` that accepts an array of intervals, and returns the sum of all the interval lengths. Overlapping intervals should only be counted once.\n\n### Intervals\n\nIntervals are represented by a pair of integers in the form of an array. The first value of the interval will always be less than the second value. Interval example: `[1, 5]` is an interval from 1 to 5. The length of this interval is 4.\n\n### Overlapping Intervals\n\nList containing overlapping intervals:\n\n```\n[\n   [1,4],\n   [7, 10],\n   [3, 5]\n]\n```\n\nThe sum of the lengths of these intervals is 7. Since [1, 4] and [3, 5] overlap, we can treat the interval as [1, 5], which has a length of 4.\n\n### Examples:\n\n```\nsumIntervals( [\n   [1,2],\n   [6, 10],\n   [11, 15]\n] ) => 9\n\nsumIntervals( [\n   [1,4],\n   [7, 10],\n   [3, 5]\n] ) => 7\n\nsumIntervals( [\n   [1,5],\n   [10, 20],\n   [1, 6],\n   [16, 19],\n   [5, 11]\n] ) => 19\n\nsumIntervals( [\n   [0, 20],\n   [-100000000, 10],\n   [30, 40]\n] ) => 100000030\n```\n\n\n### Tests with large intervals\n\nYour algorithm should be able to handle large intervals. All tested intervals are subsets of the range `[-1000000000, 1000000000]`.",
  "apiVersion": 2,
  "tags": [
    "Algorithms",
    "Performance"
  ],
  "totalAttempts": 216169,
  "totalCompleted": 26496,
  "totalStars": 1902
}