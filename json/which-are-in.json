{
  "id": "550554fd08b86f84fe000a58",
  "name": "Which are  in?",
  "slug": "which-are-in",
  "category": "refactoring",
  "publishedAt": "2015-03-15T09:48:28.328Z",
  "approvedAt": "2015-04-30T11:58:14.730Z",
  "languages": [
    "ruby",
    "csharp",
    "python",
    "java",
    "clojure",
    "haskell",
    "javascript",
    "coffeescript",
    "elixir",
    "typescript",
    "cpp",
    "php",
    "crystal",
    "fsharp",
    "c",
    "swift",
    "r",
    "shell",
    "ocaml",
    "julia",
    "scala",
    "powershell",
    "kotlin",
    "go",
    "nim",
    "racket",
    "rust",
    "lua",
    "pascal",
    "perl",
    "elm",
    "d",
    "erlang",
    "prolog"
  ],
  "url": "https://www.codewars.com/kata/550554fd08b86f84fe000a58",
  "rank": {
    "id": -6,
    "name": "6 kyu",
    "color": "yellow"
  },
  "createdAt": "2015-03-15T09:46:37.929Z",
  "createdBy": {
    "username": "g964",
    "url": "https://www.codewars.com/users/g964"
  },
  "approvedBy": "GiacomoSorbi",
  "description": "Given two arrays of strings `a1` and `a2` return a sorted array `r` in lexicographical order of the strings of `a1` which are substrings of strings of `a2`.\n\n#### Example 1:\n`a1 = [\"arp\", \"live\", \"strong\"]`\n\n`a2 = [\"lively\", \"alive\", \"harp\", \"sharp\", \"armstrong\"]`\n\nreturns `[\"arp\", \"live\", \"strong\"]`\n\n#### Example 2:\n`a1 = [\"tarp\", \"mice\", \"bull\"]`\n\n`a2 = [\"lively\", \"alive\", \"harp\", \"sharp\", \"armstrong\"]`\n\nreturns `[]`\n\n#### Notes: \n- Arrays are written in \"general\" notation. See \"Your Test Cases\" for examples in your language.\n- In Shell bash `a1` and `a2` are strings. The return is a string where words are separated by commas.\n- Beware: In some languages `r` must be without duplicates.",
  "apiVersion": 2,
  "tags": [
    "Arrays",
    "Lists",
    "Strings",
    "Refactoring"
  ],
  "totalAttempts": 281971,
  "totalCompleted": 60134,
  "totalStars": 1220
}