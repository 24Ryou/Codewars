{
  "id": "541c8630095125aba6000c00",
  "name": "Sum of Digits / Digital Root",
  "slug": "sum-of-digits-slash-digital-root",
  "category": "algorithms",
  "publishedAt": "2014-09-19T20:00:24.356Z",
  "approvedAt": "2014-09-22T04:03:49.397Z",
  "languages": [
    "ruby",
    "javascript",
    "coffeescript",
    "python",
    "clojure",
    "haskell",
    "java",
    "csharp",
    "swift",
    "r",
    "c",
    "cpp",
    "scala",
    "nasm",
    "go",
    "ocaml",
    "typescript",
    "julia",
    "prolog",
    "nim",
    "elixir",
    "crystal",
    "factor",
    "elm",
    "rust",
    "pascal",
    "fsharp",
    "cobol",
    "d"
  ],
  "url": "https://www.codewars.com/kata/541c8630095125aba6000c00",
  "rank": {
    "id": -6,
    "name": "6 kyu",
    "color": "yellow"
  },
  "createdAt": "2014-09-19T19:38:26.041Z",
  "createdBy": {
    "username": "user578387",
    "url": "https://www.codewars.com/users/user578387"
  },
  "approvedBy": "xcthulhu",
  "description": "[Digital root](https://en.wikipedia.org/wiki/Digital_root) is the _recursive sum of all the digits in a number._\n\nGiven `n`, take the sum of the digits of `n`. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. The input will be a non-negative integer.\n\n## Examples\n```\n    16  -->  1 + 6 = 7\n   942  -->  9 + 4 + 2 = 15  -->  1 + 5 = 6\n132189  -->  1 + 3 + 2 + 1 + 8 + 9 = 24  -->  2 + 4 = 6\n493193  -->  4 + 9 + 3 + 1 + 9 + 3 = 29  -->  2 + 9 = 11  -->  1 + 1 = 2\n```\n",
  "apiVersion": 2,
  "tags": [
    "Mathematics",
    "Algorithms"
  ],
  "totalAttempts": 757110,
  "totalCompleted": 188280,
  "totalStars": 3267
}