{
  "id": "578aa45ee9fd15ff4600090d",
  "name": "Sort the odd",
  "slug": "sort-the-odd",
  "category": "reference",
  "publishedAt": "2016-07-16T21:30:19.943Z",
  "approvedAt": "2016-09-06T01:35:42.171Z",
  "languages": [
    "javascript",
    "python",
    "csharp",
    "cpp",
    "haskell",
    "java",
    "ruby",
    "clojure",
    "elixir",
    "rust",
    "php",
    "cobol",
    "c",
    "lambdacalc"
  ],
  "url": "https://www.codewars.com/kata/578aa45ee9fd15ff4600090d",
  "rank": {
    "id": -6,
    "name": "6 kyu",
    "color": "yellow"
  },
  "createdAt": "2016-07-16T21:17:18.667Z",
  "createdBy": {
    "username": "fyvfyv",
    "url": "https://www.codewars.com/users/fyvfyv"
  },
  "approvedBy": "jhoffner",
  "description": "## Task\n\nYou will be given an array of numbers. You have to sort the odd numbers in ascending order while leaving the even numbers at their original positions.\n\n### Examples\n\n```\n[7, 1]  =>  [1, 7]\n[5, 8, 6, 3, 4]  =>  [3, 8, 6, 5, 4]\n[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]  =>  [1, 8, 3, 6, 5, 4, 7, 2, 9, 0]\n```\n\n~~~if:lambdacalc\n### Encodings\n\npurity: `LetRec`  \nnumEncoding: `BinaryScott`  \nexport constructors `nil, cons` and deconstructor `foldl` for your `List` encoding  \n~~~",
  "apiVersion": 2,
  "tags": [
    "Fundamentals",
    "Arrays",
    "Sorting"
  ],
  "totalAttempts": 270081,
  "totalCompleted": 68861,
  "totalStars": 2070
}