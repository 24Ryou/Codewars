{
  "id": "56fa3c5ce4d45d2a52001b3c",
  "name": "Exclusive \"or\" (xor) Logical Operator",
  "slug": "exclusive-or-xor-logical-operator",
  "category": "reference",
  "publishedAt": "2016-03-29T09:24:06.668Z",
  "approvedAt": "2016-03-30T05:10:51.981Z",
  "languages": [
    "javascript",
    "ruby",
    "haskell",
    "python",
    "java",
    "coffeescript",
    "typescript",
    "clojure",
    "csharp",
    "cpp",
    "c",
    "nasm",
    "go",
    "cfml"
  ],
  "url": "https://www.codewars.com/kata/56fa3c5ce4d45d2a52001b3c",
  "rank": {
    "id": -8,
    "name": "8 kyu",
    "color": "white"
  },
  "createdAt": "2016-03-29T08:27:08.501Z",
  "createdBy": {
    "username": "donaldsebleung",
    "url": "https://www.codewars.com/users/donaldsebleung"
  },
  "approvedBy": "raulbc777",
  "description": "# Exclusive \"or\" (xor) Logical Operator\n\n## Overview\n\nIn some scripting languages like PHP, there exists a logical operator (e.g. ```&&```, ```||```, ```and```, ```or```, etc.) called the \"Exclusive Or\" (hence the name of this Kata).  The exclusive or evaluates two booleans.  It then returns true if **exactly one of the two expressions are true**, false otherwise.  For example:\n\n\n```php\nfalse xor false == false // since both are false\ntrue xor false == true // exactly one of the two expressions are true\nfalse xor true == true // exactly one of the two expressions are true\ntrue xor true == false // Both are true.  \"xor\" only returns true if EXACTLY one of the two expressions evaluate to true.\n```\n\n## Task\n\nSince we cannot define keywords in Javascript (well, at least I don't know how to do it), your task is to define a function ```xor(a, b)``` where a and b are the two expressions to be evaluated.  Your ```xor``` function should have the behaviour described above, returning true if **exactly one of the two expressions evaluate to true**, false otherwise.\n",
  "apiVersion": 2,
  "tags": [
    "Fundamentals"
  ],
  "totalAttempts": 43393,
  "totalCompleted": 23100,
  "totalStars": 134
}