{
  "id": "5541f58a944b85ce6d00006a",
  "name": "Product of consecutive Fib numbers",
  "slug": "product-of-consecutive-fib-numbers",
  "category": "reference",
  "publishedAt": "2015-04-30T09:29:08.484Z",
  "approvedAt": "2015-05-08T18:35:36.215Z",
  "languages": [
    "ruby",
    "javascript",
    "csharp",
    "haskell",
    "python",
    "java",
    "clojure",
    "coffeescript",
    "cpp",
    "php",
    "crystal",
    "fsharp",
    "c",
    "typescript",
    "rust",
    "swift",
    "go",
    "r",
    "shell",
    "ocaml",
    "kotlin",
    "elixir",
    "julia",
    "scala",
    "powershell",
    "nim",
    "racket",
    "reason",
    "forth",
    "prolog",
    "fortran",
    "elm",
    "cobol",
    "d",
    "erlang",
    "factor",
    "nasm"
  ],
  "url": "https://www.codewars.com/kata/5541f58a944b85ce6d00006a",
  "rank": {
    "id": -5,
    "name": "5 kyu",
    "color": "yellow"
  },
  "createdAt": "2015-04-30T09:27:38.499Z",
  "createdBy": {
    "username": "g964",
    "url": "https://www.codewars.com/users/g964"
  },
  "approvedBy": "jhoffner",
  "description": "The Fibonacci numbers are the numbers in the following integer sequence (Fn):\n>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, ...\n\nsuch as \n>F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1.\n\nGiven a number, say prod (for product), we search two Fibonacci numbers F(n) and F(n+1) verifying \n>F(n) * F(n+1) = prod.\n\nYour function productFib takes an integer (prod) and returns\nan array: \n```\n[F(n), F(n+1), true] or {F(n), F(n+1), 1} or (F(n), F(n+1), True)\n```\ndepending on the language if F(n) * F(n+1) = prod.\n\nIf you don't find two consecutive F(n) verifying `F(n) * F(n+1) = prod`you will return\n```\n[F(n), F(n+1), false] or {F(n), F(n+1), 0} or (F(n), F(n+1), False)\n```\nF(n) being the smallest one such as `F(n) * F(n+1) > prod`.\n\n\n#### Some Examples of Return:\n(depend on the language)\n\n```\nproductFib(714) # should return (21, 34, true), \n                # since F(8) = 21, F(9) = 34 and 714 = 21 * 34\n\nproductFib(800) # should return (34, 55, false), \n                # since F(8) = 21, F(9) = 34, F(10) = 55 and 21 * 34 < 800 < 34 * 55\n-----\nproductFib(714) # should return [21, 34, true], \nproductFib(800) # should return [34, 55, false], \n-----\nproductFib(714) # should return {21, 34, 1}, \nproductFib(800) # should return {34, 55, 0},        \n-----\nproductFib(714) # should return {21, 34, true}, \nproductFib(800) # should return {34, 55, false}, \n```\n\n#### Note:\n\n- You can see examples for your language in \"Sample Tests\".\n\n",
  "apiVersion": 2,
  "tags": [
    "Algorithms",
    "Mathematics"
  ],
  "totalAttempts": 175086,
  "totalCompleted": 46838,
  "totalStars": 1875
}