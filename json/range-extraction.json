{
  "id": "51ba717bb08c1cd60f00002f",
  "name": "Range Extraction",
  "slug": "range-extraction",
  "category": "algorithms",
  "publishedAt": "2013-06-14T06:14:30.219Z",
  "approvedAt": null,
  "languages": [
    "javascript",
    "coffeescript",
    "ruby",
    "go",
    "python",
    "java",
    "haskell",
    "csharp",
    "cpp",
    "julia",
    "kotlin",
    "rust",
    "scala",
    "racket",
    "c",
    "nasm",
    "nim",
    "php",
    "cobol",
    "vb"
  ],
  "url": "https://www.codewars.com/kata/51ba717bb08c1cd60f00002f",
  "rank": {
    "id": -4,
    "name": "4 kyu",
    "color": "blue"
  },
  "createdAt": "2013-06-14T01:27:23.326Z",
  "createdBy": {
    "username": "jhoffner",
    "url": "https://www.codewars.com/users/jhoffner"
  },
  "approvedBy": null,
  "description": "A format for expressing an ordered list of integers is to use a comma separated list of either\n\n* individual integers\n* or a range of integers denoted by the starting integer separated from the end integer in the range by a dash, '-'. The range includes all integers in the interval including both endpoints.  It is not considered a range unless it spans at least 3 numbers. For example \"12,13,15-17\"\n\nComplete the solution  so that it takes a list of integers in increasing order and returns a correctly formatted string in the range format. \n\n**Example:**\n\n```javascript\nsolution([-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20]);\n// returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```coffeescript\nsolution([-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20])\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```ruby\nsolution([-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20])\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```python\nsolution([-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20])\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```java\nSolution.rangeExtraction(new int[] {-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20})\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```C#\nRangeExtraction.Extract(new[] {-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20});\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n```VB\nRangeExtraction.Extract({-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20});\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n```cpp\nrange_extraction({-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20});\n// returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n```c\nrange_extraction((const []){-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20}, 20);\n/* returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\" */\n```\n```nasm\nnums:  dd  -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20\n\nmov rdi, nums\nmov rsi, 20\ncall range_extraction\n; RAX <- `-10--8,-6,-3-1,3-5,7-11,14,15,17-20\\0`\n```\n```julia\nrangeextraction([-10 -9 -8 -6 -3 -2 -1 0 1 3 4 5 7 8 9 10 11 14 15 17 18 19 20])\n# returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```scala\nsolution(List(-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20))\n// \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```racket\n(solution '(-10 -9 -8 -6 -3 -2 -1 0 1 3 4 5 7 8 9 10 11 14 15 17 18 19 20))\n; returns \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n```php\nsolution([-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20])\n// returns '-10--8,-6,-3-1,3-5,7-11,14,15,17-20'\n```\n\n```cobol\n        Rangeextraction\n        xs = [-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, \n             14, 15, 17, 18, 19, 20]\n        res = \"-10--8,-6,-3-1,3-5,7-11,14,15,17-20\"\n```\n\n*Courtesy of rosettacode.org*\n\n",
  "apiVersion": 2,
  "tags": [
    "Algorithms"
  ],
  "totalAttempts": 203627,
  "totalCompleted": 36598,
  "totalStars": 1901
}