{
  "id": "5672682212c8ecf83e000050",
  "name": "Twice linear",
  "slug": "twice-linear",
  "category": "algorithms",
  "publishedAt": "2015-12-17T07:45:47.885Z",
  "approvedAt": "2015-12-25T07:35:39.325Z",
  "languages": [
    "ruby",
    "python",
    "javascript",
    "coffeescript",
    "java",
    "csharp",
    "haskell",
    "clojure",
    "cpp",
    "php",
    "typescript",
    "crystal",
    "fsharp",
    "c",
    "rust",
    "swift",
    "go",
    "r",
    "shell",
    "ocaml",
    "objc",
    "kotlin",
    "julia",
    "fortran",
    "nasm",
    "elixir",
    "scala",
    "powershell",
    "nim",
    "reason",
    "racket",
    "prolog",
    "haxe",
    "dart",
    "commonlisp",
    "pascal",
    "factor",
    "raku",
    "perl",
    "lua",
    "elm",
    "cobol",
    "d",
    "erlang"
  ],
  "url": "https://www.codewars.com/kata/5672682212c8ecf83e000050",
  "rank": {
    "id": -4,
    "name": "4 kyu",
    "color": "blue"
  },
  "createdAt": "2015-12-17T07:45:39.223Z",
  "createdBy": {
    "username": "g964",
    "url": "https://www.codewars.com/users/g964"
  },
  "approvedBy": "joh_pot",
  "description": "Consider a sequence `u` where u is defined as follows:\n\n1. The number `u(0) = 1` is the first one in `u`.\n2. For each `x` in `u`, then `y = 2 * x + 1` and `z = 3 * x + 1` must be in `u` too.\n3. There are no other numbers in `u`.\n\nEx: \n`u = [1, 3, 4, 7, 9, 10, 13, 15, 19, 21, 22, 27, ...]`\n\n1 gives 3 and 4, then 3 gives 7 and 10, 4 gives 9 and 13, then 7 gives 15 and 22 and so on...\n\n#### Task: \nGiven parameter `n` the function `dbl_linear` (or dblLinear...) returns the element `u(n)` of \nthe ordered (with <) sequence `u` (so, there are no duplicates).\n\n#### Example:\n`dbl_linear(10) should return 22`\n\n#### Note:\nFocus attention on efficiency\n\n",
  "apiVersion": 2,
  "tags": [
    "Mathematics",
    "Algorithms"
  ],
  "totalAttempts": 198406,
  "totalCompleted": 17024,
  "totalStars": 2389
}