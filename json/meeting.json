{
  "id": "59df2f8f08c6cec835000012",
  "name": "Meeting",
  "slug": "meeting",
  "category": "reference",
  "publishedAt": "2017-10-12T09:02:12.695Z",
  "approvedAt": "2018-10-15T07:40:59.932Z",
  "languages": [
    "shell",
    "javascript",
    "python",
    "java",
    "csharp",
    "scala",
    "julia",
    "r",
    "kotlin",
    "powershell",
    "go",
    "ruby",
    "nim",
    "php",
    "clojure",
    "racket",
    "typescript",
    "fsharp",
    "rust",
    "coffeescript",
    "crystal",
    "dart",
    "groovy",
    "haxe",
    "commonlisp",
    "pascal",
    "perl",
    "lua",
    "elm",
    "d",
    "erlang",
    "prolog"
  ],
  "url": "https://www.codewars.com/kata/59df2f8f08c6cec835000012",
  "rank": {
    "id": -6,
    "name": "6 kyu",
    "color": "yellow"
  },
  "createdAt": "2017-10-12T09:02:07.568Z",
  "createdBy": {
    "username": "g964",
    "url": "https://www.codewars.com/users/g964"
  },
  "approvedBy": "Blind4Basics",
  "description": "John has invited some friends. His list is:\n```\ns = \"Fred:Corwill;Wilfred:Corwill;Barney:Tornbull;Betty:Tornbull;Bjon:Tornbull;Raphael:Corwill;Alfred:Corwill\";\n```\n\nCould you make a program that \n- makes this string uppercase\n- gives it sorted in alphabetical order by last name. \n\nWhen the last names are the same, sort them by first name.\nLast name and first name of a guest come in the result between parentheses separated by a comma.\n\nSo the result of function `meeting(s)` will be:\n```\n\"(CORWILL, ALFRED)(CORWILL, FRED)(CORWILL, RAPHAEL)(CORWILL, WILFRED)(TORNBULL, BARNEY)(TORNBULL, BETTY)(TORNBULL, BJON)\"\n```\nIt can happen that in two distinct families with the same family name two people have the same first name too.\n\n#### Notes\n- You can see another examples in the \"Sample tests\".\n\n",
  "apiVersion": 2,
  "tags": [
    "Fundamentals"
  ],
  "totalAttempts": 61381,
  "totalCompleted": 15650,
  "totalStars": 542
}