{
  "id": "54e6533c92449cc251001667",
  "name": "Unique In Order",
  "slug": "unique-in-order",
  "category": "reference",
  "publishedAt": "2015-02-19T21:46:17.357Z",
  "approvedAt": "2015-05-08T18:36:18.658Z",
  "languages": [
    "python",
    "ruby",
    "javascript",
    "csharp",
    "php",
    "clojure",
    "haskell",
    "crystal",
    "rust",
    "cpp",
    "scala"
  ],
  "url": "https://www.codewars.com/kata/54e6533c92449cc251001667",
  "rank": {
    "id": -6,
    "name": "6 kyu",
    "color": "yellow"
  },
  "createdAt": "2015-02-19T21:18:52.456Z",
  "createdBy": {
    "username": "pinelopi",
    "url": "https://www.codewars.com/users/pinelopi"
  },
  "approvedBy": "jhoffner",
  "description": "Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.\n\nFor example:\n\n```cpp\nuniqueInOrder(\"AAAABBBCCDAABBB\") == {'A', 'B', 'C', 'D', 'A', 'B'}\nuniqueInOrder(\"ABBCcAD\")         == {'A', 'B', 'C', 'c', 'A', 'D'}\nuniqueInOrder([1,2,2,3,3])       == {1,2,3}\n```\n```javascript\nuniqueInOrder('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nuniqueInOrder('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nuniqueInOrder([1,2,2,3,3])       == [1,2,3]\n```\n```python\nunique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```ruby\nunique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```haskell\nuniqueInOrder \"AAAABBBCCDAABBB\" == \"ABCDAB\"\nuniqueInOrder \"ABBCcAD\"         == \"ABCcAD\"\nuniqueInOrder [1,2,2,3,3]       == [1,2,3]\n```\n```crystal\nunique_in_order(\"AAAABBBCCDAABBB\") == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order(\"ABBCcAD\")         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```scala\nuniqueInOrder(\"AAAABBBCCDAABBB\")   == List('A', 'B', 'C', 'D', 'A', 'B')\nuniqueInOrder(\"ABBCcAD\")           == List('A', 'B', 'C', 'c', 'A', 'D')\nuniqueInOrder(List(1, 2, 2, 3, 3)) == List(1, 2, 3)\n```\n",
  "apiVersion": 2,
  "tags": [
    "Algorithms",
    "Fundamentals"
  ],
  "totalAttempts": 644382,
  "totalCompleted": 124149,
  "totalStars": 2269
}