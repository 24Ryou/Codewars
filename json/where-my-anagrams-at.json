{
  "id": "523a86aa4230ebb5420001e1",
  "name": "Where my anagrams at?",
  "slug": "where-my-anagrams-at",
  "category": "algorithms",
  "publishedAt": "2013-09-19T05:44:54.072Z",
  "approvedAt": null,
  "languages": [
    "javascript",
    "coffeescript",
    "ruby",
    "haskell",
    "python",
    "csharp",
    "php",
    "r",
    "objc",
    "rust",
    "go"
  ],
  "url": "https://www.codewars.com/kata/523a86aa4230ebb5420001e1",
  "rank": {
    "id": -5,
    "name": "5 kyu",
    "color": "yellow"
  },
  "createdAt": "2013-09-19T05:07:55.100Z",
  "createdBy": {
    "username": "sandbochs",
    "url": "https://www.codewars.com/users/sandbochs"
  },
  "approvedBy": null,
  "description": "What is an anagram? Well, two words are anagrams of each other if they both contain the same letters. For example:\n\n```\n'abba' & 'baab' == true\n\n'abba' & 'bbaa' == true\n\n'abba' & 'abbba' == false\n\n'abba' & 'abca' == false\n```\n\nWrite a function that will find all the anagrams of a word from a list. You will be given two inputs a word and an array with words. You should return an array of all the anagrams or an empty array if there are none. For example:\n\n```javascript\nanagrams('abba', ['aabb', 'abcd', 'bbaa', 'dada']) => ['aabb', 'bbaa']\n\nanagrams('racer', ['crazer', 'carer', 'racar', 'caers', 'racer']) => ['carer', 'racer']\n\nanagrams('laser', ['lazing', 'lazy',  'lacer']) => []\n```\n",
  "apiVersion": 2,
  "tags": [
    "Strings",
    "Algorithms"
  ],
  "totalAttempts": 299595,
  "totalCompleted": 79409,
  "totalStars": 1434
}