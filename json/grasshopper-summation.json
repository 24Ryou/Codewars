{
  "id": "55d24f55d7dd296eb9000030",
  "name": "Grasshopper - Summation",
  "slug": "grasshopper-summation",
  "category": "reference",
  "publishedAt": "2015-09-03T18:12:44.351Z",
  "approvedAt": "2015-09-11T02:33:00.119Z",
  "languages": [
    "javascript",
    "ruby",
    "python",
    "coffeescript",
    "elixir",
    "php",
    "cpp",
    "csharp",
    "java",
    "crystal",
    "bf",
    "typescript",
    "scala",
    "haskell",
    "groovy",
    "kotlin",
    "nasm",
    "julia",
    "dart",
    "r",
    "reason",
    "nim",
    "racket",
    "factor",
    "go",
    "clojure",
    "elm",
    "purescript",
    "forth",
    "c",
    "lua",
    "cfml",
    "erlang",
    "fortran",
    "fsharp",
    "powershell",
    "prolog",
    "solidity",
    "swift",
    "vb",
    "shell",
    "objc",
    "rust",
    "perl",
    "raku",
    "ocaml",
    "commonlisp",
    "pascal",
    "haxe",
    "cobol",
    "d"
  ],
  "url": "https://www.codewars.com/kata/55d24f55d7dd296eb9000030",
  "rank": {
    "id": -8,
    "name": "8 kyu",
    "color": "white"
  },
  "createdAt": "2015-08-17T21:17:09.547Z",
  "createdBy": {
    "username": "danleavitt0",
    "url": "https://www.codewars.com/users/danleavitt0"
  },
  "approvedBy": "joh_pot",
  "description": "# Summation\n\nWrite a program that finds the summation of every number from 1 to num. The number will always be a positive integer greater than 0.\n\nFor example:\n```if-not:racket\n~~~\nsummation(2) -> 3\n1 + 2\n\nsummation(8) -> 36\n1 + 2 + 3 + 4 + 5 + 6 + 7 + 8\n~~~\n```\n```if:racket\n~~~racket\n(summation 2) ; 3  (+ 1 2)\n(summation 8) ; 36 (+ 1 2 3 4 5 6 7 8)\n~~~\n```\n",
  "apiVersion": 2,
  "tags": [
    "Fundamentals"
  ],
  "totalAttempts": 282790,
  "totalCompleted": 138013,
  "totalStars": 898
}